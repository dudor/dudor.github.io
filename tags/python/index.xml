<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on DUDOR&#39;s BLOG</title>
    <link>https://dudor.github.io/tags/python/</link>
    <description>Recent content in Python on DUDOR&#39;s BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 22 Jul 2016 10:56:22 +0000</lastBuildDate>
    
	<atom:link href="https://dudor.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>centos一键安装开发工具包</title>
      <link>https://dudor.github.io/2016/07/22/centos%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E5%8C%85/</link>
      <pubDate>Fri, 22 Jul 2016 10:56:22 +0000</pubDate>
      
      <guid>https://dudor.github.io/2016/07/22/centos%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E5%8C%85/</guid>
      <description>今天在centos上升级python3.5，提示缺少编译工具gcc等
如果一个个的手动下载安装太慢了，可以用系统自带的命令一键安装
yum groupinstall &#39;Development Tools&#39;  这个命令会安装几十个工具，如git,gcc,perl,zip，svn，rsync等等，太方便了。</description>
    </item>
    
    <item>
      <title>win7和win10上安装scrapy爬虫</title>
      <link>https://dudor.github.io/2016/07/19/win7%E5%92%8Cwin10%E4%B8%8A%E5%AE%89%E8%A3%85scrapy%E7%88%AC%E8%99%AB/</link>
      <pubDate>Tue, 19 Jul 2016 14:40:08 +0000</pubDate>
      
      <guid>https://dudor.github.io/2016/07/19/win7%E5%92%8Cwin10%E4%B8%8A%E5%AE%89%E8%A3%85scrapy%E7%88%AC%E8%99%AB/</guid>
      <description>我在自己的win7和win10电脑上安装成功了，具体环境是：
win7-64位/win10-64位 + python2.7-32
但是python3.5中没有安装成功(好像不支持)。
以下用到的所用文件我都在百度网盘中做了备份，有需要的可以直接用我分享的文件。
百度盘：http://pan.baidu.com/s/1qYIPIYK
安装32位的python2.7  下载地址 https://www.python.org/downloads/ 更新环境变量,可以直接把下面的代码添加到环境变量的path中   C:\Python27\;C:\Python27\Scripts\;  或者直接运行python自带的脚本自动更新
 c:\python27\python.exe c:\python27\tools\scripts\win_add2path.py  安装 pywin32  下载地址：https://sourceforge.net/projects/pywin32/files/pywin32/Build%20220/
pywin32的版本要和python的一致，所以要选 pywin32-220.win32-py2.7.exe
  安装 Microsoft Visual C++ Compiler for Python 2.7  下载地址 : https://www.microsoft.com/en-us/download/details.aspx?id=44266  安装pip  下载地址 : https://pip.pypa.io/en/latest/installing/
下载页而上的get-pip.py脚本，然后在本机上运行
python get-pip.py   安装lxml  下载地址 : http://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml 这个也需要和python版本对应，所以在页面上搜索lxml-3.4.4-cp27-none-win32.whl，下载并用下面的命令安装。
pip install lxml-3.4.4-cp27-none-win32.whl   最后安装scrapy  pip install scrapy   参考： http://doc.</description>
    </item>
    
    <item>
      <title>python学习之字典</title>
      <link>https://dudor.github.io/2016/06/27/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%AD%97%E5%85%B8/</link>
      <pubDate>Mon, 27 Jun 2016 11:52:39 +0000</pubDate>
      
      <guid>https://dudor.github.io/2016/06/27/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%AD%97%E5%85%B8/</guid>
      <description>  学习内容来自廖雪峰的官方网站
 dict (字典) dict (字典) 是一个存储了许多key=value键值对的集合，就像新华字典一样，查找数据很快。 比如查找班级中某个同学的成绩，用list来实现的话，可能是这样：
students = [&#39;lilei&#39;,&#39;hanmeimei&#39;,&#39;lucy&#39;] scores = [55,56,57] name = input(&#39;请输入学生的名字&amp;gt;&#39;) for i in range(len(students)): if(students[i] == name): print(scores[i])  而用dict来实现会更简单：
students = {&#39;lilei&#39;:55,&#39;hanmeimei&#39;:56,&#39;lucy&#39;:57} name = input(&#39;请输入学生的名字 &amp;gt;&#39;) print(students[name])  由于字典是根据key来查找value的，所以它的key必须是不能改变的，也就是常量。
set (集合) set 和 dict类似，只是set只存储key，而不存储value，它是一个无序的并且内部无重复元素的集合。 要创建一个set，需要提供一个list作为输入集合：
s = set([1, 2, 3])  </description>
    </item>
    
    <item>
      <title>python学习之列表,元组</title>
      <link>https://dudor.github.io/2016/06/27/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%88%97%E8%A1%A8%E5%85%83%E7%BB%84/</link>
      <pubDate>Mon, 27 Jun 2016 10:14:35 +0000</pubDate>
      
      <guid>https://dudor.github.io/2016/06/27/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%88%97%E8%A1%A8%E5%85%83%E7%BB%84/</guid>
      <description>学习内容来自廖雪峰的官方网站
 python中内置了四种集合，分别是list，tupple(元组)，set和dict。 其中前三种比较类似，只存储了key，而dict字典存储的是key-value键值对。 如果学过其它编程语言，就会很容易理解它们。
list (列表) list是一个有序的列表，并且可以随时添加修改内部的元素。
classmates = [&#39;lilei&#39;,&#39;xiaoming&#39;] print(classmates) classmates.append(&#39;hanmeimei&#39;) print(classmates) print(classmates.pop()) print(classmates) classmates.insert(0,&#39;hanmeimei&#39;) print(classmates) classmates[2] = &#39;lucy&#39; print(classmates)  输出结果为
[&#39;lilei&#39;, &#39;xiaoming&#39;] [&#39;lilei&#39;, &#39;xiaoming&#39;, &#39;hanmeimei&#39;] hanmeimei [&#39;lilei&#39;, &#39;xiaoming&#39;] [&#39;hanmeimei&#39;, &#39;lilei&#39;, &#39;xiaoming&#39;] [&#39;hanmeimei&#39;, &#39;lilei&#39;, &#39;lucy&#39;]  需要注意的是如果用索引访问会出现数组越界的错误 比如 classmates = [&amp;lsquo;lilei&amp;rsquo;,&amp;lsquo;xiaoming&amp;rsquo;]，然后访问classmates[2]=&amp;lsquo;hanmeimei&amp;rsquo;，会出现索引越界，因为索引为2的项不存在。
tupple (元组) tupple也是一种有序的列表，它和list非常相似，只是它在初始化之后，内部的元素就不能被修改了。
database = (&#39;mysql&#39;,&#39;mssql&#39;,&#39;nosql&#39;) print(database[1]) #修改会报错 database[0] = &#39;oracle&#39;  你只能访问database，而不能修改它。</description>
    </item>
    
  </channel>
</rss>